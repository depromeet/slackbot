version: 2
jobs:
  build:
    docker:
      - image: choib24/dpm-slackbot-management
    steps:
      - checkout
      - run:
          command: |
            python3.6 -m venv venv
            source venv/bin/activate
            pip install -U pip
            pip install -r requirements.txt
            npm install

  test:
    docker:
      - image: choib24/dpm-slackbot-management
    steps:
      - checkout
      - run:
          command: |
            python3.6 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            python -m unittest src/**/tests.py --verbose

  deploy-dev:
    docker:
      - image: choib24/dpm-slackbot-management
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            python3.6 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            npm install
            npx sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
            npx sls deploy --stage dev --verbose

  deploy-prod:
    docker:
      - image: choib24/dpm-slackbot-management
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            python3.6 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            npm install
            npx sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
            npx sls deploy --stage prod --verbose

workflows:
  version: 2
  deployment-process:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy-dev:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
                - develop
      - hold:
          type: approval
          requires:
            - build
            - test
            - deploy-dev
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - build
            - test
            - deploy-dev
            - hold
          filters:
            branches:
              only: master
