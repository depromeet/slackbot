version: 2

jobs:
  build:
    docker:
      - image: choib24/ubuntu-python3-node8

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            npm install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run unit tests
          command: |
            . venv/bin/activate
            python -m unittest src/tests/*.py
  
  deploy-dev:
    docker:
      - image: choib24/ubuntu-python3-node8

    steps:
      - checkout
    
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            npm install

          name: deploy to development stage
          command: |
            . venv/bin/activate
            npx sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
            python deploy.py dev

  deploy-prod:
    docker:
      - image: choib24/ubuntu-python3-node8

    steps:
      - checkout
    
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            npm install
      
          name: deploy to production stage
          command: |
            .venv/bin/activate
            npx sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
            python deploy.py prod

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: develop
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
              - hold
          filters:
            branches:
              only: master